#!/bin/sh

set -euo pipefail

current_branch="$(git rev-parse --abbrev-ref HEAD 2>/dev/null || echo "")"

# Try to load nvm if npm is not yet available (common in GUI git clients)
if ! command -v npm >/dev/null 2>&1; then
  if [ -s "$HOME/.nvm/nvm.sh" ]; then
    # shellcheck source=/dev/null
    . "$HOME/.nvm/nvm.sh"
  elif [ -s "$HOME/.asdf/asdf.sh" ]; then
    # shellcheck source=/dev/null
    . "$HOME/.asdf/asdf.sh"
    asdf reshim nodejs >/dev/null 2>&1 || true
  elif command -v fnm >/dev/null 2>&1; then
    eval "$(fnm env --use-on-cd)"
  elif command -v volta >/dev/null 2>&1; then
    if volta which node >/dev/null 2>&1; then
      export PATH="$(volta which node | xargs dirname):$PATH"
    fi
  fi

  if ! command -v npm >/dev/null 2>&1; then
    for candidate in /opt/homebrew/bin /usr/local/bin; do
      if [ -x "$candidate/npm" ]; then
        export PATH="$candidate:$PATH"
        break
      fi
    done
  fi
fi

if ! command -v npm >/dev/null 2>&1; then
  if [ "${HUSKY_SKIP_NPM_CHECK:-}" = "1" ]; then
    echo "husky (pre-push): npm not found, skipping checks because HUSKY_SKIP_NPM_CHECK=1"
    exit 0
  fi
  echo "husky (pre-push): npm not found in PATH. Install Node.js or set HUSKY_SKIP_NPM_CHECK=1 to bypass." >&2
  exit 127
fi

if git log -1 --pretty=%B | grep -q "chore(release)"; then
  echo "husky (pre-push): skipping tests because last commit was a release bump"
  exit 0
fi

npm test

if [ "$current_branch" = "main" ]; then
  echo "husky (pre-push): reminder - production release now handled by GitHub Actions on merge to main."
fi
